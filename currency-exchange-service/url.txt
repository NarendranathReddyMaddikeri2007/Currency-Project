Currency Exchange Service:
URL: http://localhost:8000/currency-exchange/from/USD/to/INR

Response Structure
{
   "id":10001,
   "from":"USD",
   "to":"INR",
   "conversionMultiple":65.00,
   "environment":"8000 instance-id"
}

SUITABLE YOUTUBE VIDEO TO CREATE INSTANCES OF JAVA APPLICATION:
https://youtu.be/pRb1io4Ewuc?si=B_0318e-YxIDKMOW

Currency Conversion Service:
URL: http://localhost:8100/currency-conversion/from/USD/to/INR/quantity/10

Response Structure
{
   "id":10001,
   "from":"USD",
   "to":"INR",
   "conversionMultiple":65.00,
   "quantity": 10,
   "totalCalculatedAmount": 650.00
   "environment":"8100 instance-id"
}


Eureka: http://localhost:8761/CURRENCY-EXCHANGE/


-------------------------- API GATEWAY --------------------------
http://localhost:8765/CURRENCY-EXCHANGE/currency-exchange/from/USD/to/IND

Above request will provide response as below:
{
    "id": 1001,
    "conversionMultiple": 10,
    "environment": "8001",
    "from": "USD",
    "to": "IND"
}
-----------------------------------------
http://localhost:8765/CURRENCY-CONVERSION/currency-conversion-feign/from/USD/to/IND/quantity/250

Above request will provide response as below:
{
    "id": 1001,
    "currency_from": "USD",
    "currency_to": "IND",
    "quantity": 10,
    "conversionMultiple": 250,
    "totalCalculatedAmount": 2500,
    "environment": "8001 feign"
}
- So from now we can call any service with eureka with API Gateway.
- If we are implementing authentication, we can use API Gateway here as only authenticated persons are allowed by using API Gateway in microservices.
--------------------------

In the above urls, CURRENCY-EXCHANGE or CURRENCY-CONVERSION seems ugly. To fix that,




